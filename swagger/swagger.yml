swagger: "2.0"
info:
  title: API
  description: API Aplicacion Voto - Entidades Core
  version: 1.0.0
  termsOfService: http://oas.udistrital.edu.co/
  contact:
    email: ssierraf@correo.udistrital.edu.co
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /arbol_rubro/:
    get:
      tags:
      - arbol_rubro
      description: get all objects
      operationId: NodoRubroController.GetAll
      responses:
        "200":
          description: NodoRubro models.NodoRubro
        "403":
          description: :objectId is empty
    post:
      tags:
      - arbol_rubro
      description: Crear NodoRubro
      operationId: NodoRubroController.Crear NodoRubro
      parameters:
      - in: body
        name: body
        description: Body para la creacion de NodoRubro
        required: true
        schema:
          $ref: '#/definitions/models.NodoRubro'
      responses:
        "200":
          description: '{int} NodoRubro.Id'
        "403":
          description: body is empty
  /arbol_rubro/{id}:
    get:
      tags:
      - arbol_rubro
      description: get NodoRubro by nombre
      operationId: NodoRubroController.Get
      parameters:
      - in: path
        name: nombre
        description: El nombre de la NodoRubro a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.NodoRubro'
        "403":
          description: :uid is empty
    delete:
      tags:
      - arbol_rubro
      description: Borrar NodoRubro
      operationId: NodoRubroController.Borrar NodoRubro
      parameters:
      - in: path
        name: id
        description: El id del objeto que se quiere borrar
        required: true
        type: string
      responses:
        "200":
          description: '{string} ok'
        "403":
          description: id is empty
  /arbol_rubro/{objectId}:
    put:
      tags:
      - arbol_rubro
      description: update the NodoRubro
      operationId: NodoRubroController.Update
      parameters:
      - in: path
        name: objectId
        description: The objectid you want to update
        required: true
        type: string
      - in: body
        name: body
        description: The body
        required: true
        schema:
          $ref: '#/definitions/models.Object'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "403":
          description: :objectId is empty
  /arbol_rubro/arbol/{raiz}:
    get:
      tags:
      - arbol_rubro
      description: Construye el árbol a un nivel dependiendo de la raíz
      operationId: NodoRubroController.FullArbolRubro
      parameters:
      - in: body
        name: body
        description: Código de la raíz
        schema:
          $ref: '#/definitions/stringtrue'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "404":
          description: body is empty
  /arbol_rubro/get_hojas:
    get:
      tags:
      - arbol_rubro
      description: Devuelve un arreglo con todos los nodos hoja
      operationId: NodoRubroController.GetHojas
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "404":
          description: body is empty
  /arbol_rubro_apropiacion/:
    get:
      tags:
      - arbol_rubro_apropiacion
      description: get all objects
      operationId: NodoRubroApropiacionController.GetAll
      responses:
        "200":
          description: NodoRubroApropiacion models.NodoRubroApropiacion
        "403":
          description: :objectId is empty
    post:
      tags:
      - arbol_rubro_apropiacion
      description: Post NodoRubroApropiacion2018
      operationId: NodoRubroApropiacionController.Post NodoRubroApropiacion2018
      parameters:
      - in: body
        name: body
        description: Body para la creacion de NodoRubroApropiacion2018
        required: true
        schema:
          $ref: '#/definitions/models.NodoRubroApropiacion2018'
      responses:
        "200":
          description: '{int} NodoRubroApropiacion2018.Id'
        "403":
          description: body is empty
  /arbol_rubro_apropiacion/{id}/{vigencia}/{unidadEjecutora}:
    get:
      tags:
      - arbol_rubro_apropiacion
      description: get NodoRubroApropiacion2018 by nombre
      operationId: NodoRubroApropiacionController.Get
      parameters:
      - in: path
        name: nombre
        description: El nombre de la NodoRubroApropiacion2018 a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.NodoRubroApropiacion2018'
        "403":
          description: :uid is empty
  /arbol_rubro_apropiacion/{objectId}:
    delete:
      tags:
      - arbol_rubro_apropiacion
      description: Borrar NodoRubroApropiacion2018
      operationId: NodoRubroApropiacionController.Delete NodoRubroApropiacion2018
      parameters:
      - in: path
        name: objectId
        description: El ObjectId del objeto que se quiere borrar
        required: true
        type: string
      responses:
        "200":
          description: '{string} ok'
        "403":
          description: objectId is empty
  /arbol_rubro_apropiacion/{objectId}/{vigencia}/{unidadEjecutora}:
    put:
      tags:
      - arbol_rubro_apropiacion
      description: update the NodoRubroApropiacion2018
      operationId: NodoRubroApropiacionController.Update
      parameters:
      - in: path
        name: objectId
        description: The objectid you want to update
        required: true
        type: string
      - in: body
        name: body
        description: The body
        required: true
        schema:
          $ref: '#/definitions/models.Object'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "403":
          description: :objectId is empty
  /arbol_rubro_apropiacion/{vigencia}/{unidadEjecutora}:
    get:
      tags:
      - arbol_rubro_apropiacion
      description: get all objects
      operationId: NodoRubroApropiacionController.GetAllVigencia
      responses:
        "200":
          description: NodoRubroApropiacion models.NodoRubroApropiacion
        "403":
          description: :unidadEjecutora is empty
  /arbol_rubro_apropiacion/ArbolApropiacionPadreHijo/{raiz}/{unidadEjecutora}/{vigencia}:
    get:
      tags:
      - arbol_rubro_apropiacion
      description: Devuelve un nivel del árbol de apropiaciones
      operationId: NodoRubroApropiacionController.Preflight ArbolApropiacionPadreHijo
      parameters:
      - in: body
        name: body
        description: Body para la creacion de NodoRubroApropiacion2018
        required: true
        schema:
          $ref: '#/definitions/models.NodoRubroApropiacion2018'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "403":
          description: body is empty
  /arbol_rubro_apropiacion/RaicesArbolApropiacion/{unidadEjecutora}/{vigencia}:
    get:
      tags:
      - arbol_rubro_apropiacion
      description: RaicesArbolApropiacion
      operationId: NodoRubroApropiacionController.RaicesArbolApropiacion
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "404":
          description: body is empty
  /arbol_rubro_apropiacion/aprobacion_masiva/{unidadEjecutora}/{vigencia}:
    post:
      tags:
      - arbol_rubro_apropiacion
      description: Cambia el estado de los documentos arbol_rubro_apropiacion de una
        vigencia y unidad ejecutora
      operationId: NodoRubroApropiacionController.AprobacionMasiva
      parameters:
      - in: unidadEjecutora
        name: unidadEjecutora
        description: Unidad Ejecutora de la apropiación
        required: true
        type: string
      - in: vigencia
        name: vigencia
        description: Vigencia de la apropiación
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "404":
          description: body is empty
  /arbol_rubro_apropiacion/arbol_apropiacion/{raiz}/{unidadEjecutora}/{vigencia}:
    get:
      tags:
      - arbol_rubro_apropiacion
      description: Construye el árbol dependiendo de la raíz
      operationId: NodoRubroApropiacionController.FullArbolRubroApropiaciones
      parameters:
      - in: body
        name: body
        description: Código de la raíz
        schema:
          $ref: '#/definitions/stringtrue'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "404":
          description: body is empty
  /arbol_rubro_apropiacion/arbol_apropiacion_valores/{unidadEjecutora}/{vigencia}:
    get:
      tags:
      - arbol_rubro_apropiacion
      description: Construye el árbol completo con valores
      operationId: NodoRubroApropiacionController.FullArbolApropiaciones
      parameters:
      - in: body
        name: body
        description: Código de la raíz
        schema:
          $ref: '#/definitions/stringtrue'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "404":
          description: body is empty
  /arbol_rubro_apropiacion/arbol_por_estado/{unidadEjecutora}/{vigencia}/{estado}:
    get:
      tags:
      - arbol_rubro_apropiacion
      description: Genera el árbol dependiendo del estado de las apropiaciones
      operationId: NodoRubroApropiacionController.TreeByState
      parameters:
      - in: unidadEjecutora
        name: unidadEjecutora
        description: Unidad Ejecutora de la apropiación
        required: true
        type: string
      - in: vigencia
        name: vigencia
        description: Vigencia de la apropiación
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "404":
          description: body is empty
  /arbol_rubro_apropiacion/comprobar_balance/{unidadEjecutora}/{vigencia}:
    get:
      tags:
      - arbol_rubro_apropiacion
      description: ComprobarBalanceArbolApropiaciones
      operationId: NodoRubroApropiacionController.ComprobarBalanceArbolApropiaciones
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "404":
          description: body is empty
  /arbol_rubro_apropiacion/get_hojas/{unidadEjecutora}/{vigencia}:
    get:
      tags:
      - arbol_rubro_apropiacion
      description: Devuelve un arreglo con todos los nodos hoja correspondientes a
        la vigencia y ue
      operationId: NodoRubroApropiacionController.GetHojas
      parameters:
      - in: body
        name: body
        description: Código de la raíz
        required: true
        schema:
          type: string
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "404":
          description: body is empty
  /fuente_financiamiento/:
    post:
      tags:
      - fuente_financiamiento
      description: create FuenteFinanciamiento
      operationId: FuenteFinanciamientoController.Create
      parameters:
      - in: body
        name: body
        description: body for FuenteFinanciamiento content
        required: true
        schema:
          $ref: '#/definitions/models.FuenteFinanciamiento'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.FuenteFinanciamiento'
        "403":
          description: body is empty
  /fuente_financiamiento/{id}/{vigencia}/{unidadEjecutora}:
    get:
      tags:
      - fuente_financiamiento
      description: get FuenteFinancimiento by nombre
      operationId: FuenteFinanciamientoController.Get
      parameters:
      - in: path
        name: nombre
        description: El nombre de la FuenteFinancimiento a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.FuenteFinancimiento'
        "403":
          description: :id is empty
    put:
      tags:
      - fuente_financiamiento
      description: update the FuenteFinanciamiento
      operationId: FuenteFinanciamientoController.Update
      parameters:
      - in: path
        name: id
        description: The objectid you want to update
        required: true
        type: string
      - in: body
        name: body
        description: The body
        required: true
        schema:
          $ref: '#/definitions/models.Object'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "403":
          description: :id is empty
    delete:
      tags:
      - fuente_financiamiento
      description: Borrar FuenteFinanciamiento
      operationId: FuenteFinanciamientoController.Borrar FuenteFinanciamiento
      parameters:
      - in: path
        name: id
        description: El ObjectId del objeto que se quiere borrar
        required: true
        type: string
      responses:
        "200":
          description: '{string} ok'
        "403":
          description: objectId is empty
  /fuente_financiamiento/{vigencia}/{unidadEjecutora}:
    get:
      tags:
      - fuente_financiamiento
      description: get all objects
      operationId: FuenteFinanciamientoController.GetAll
      responses:
        "200":
          description: FuenteFinanciamiento models.FuenteFinanciamiento
        "403":
          description: :unidadEjecutora is empty
  /fuente_financiamiento/VincularFuente:
    post:
      tags:
      - fuente_financiamiento
      description: create FuenteFinanciamiento
      operationId: FuenteFinanciamientoController.Create
      parameters:
      - in: body
        name: body
        description: body for FuenteFinanciamiento content
        required: true
        schema:
          $ref: '#/definitions/models.FuenteFinanciamiento'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.FuenteFinanciamiento'
        "403":
          description: body is empty
  /fuente_financiamiento/fuente_financiamiento_apropiacion/{rubro_apropiacion_id}/{vigencia}/{unidadEjecutora}:
    get:
      tags:
      - fuente_financiamiento
      description: Borrar FuenteFinanciamiento
      operationId: FuenteFinanciamientoController.GetWithRubro
      parameters:
      - in: path
        name: objectId
        description: El ObjectId del objeto que se quiere borrar
        required: true
        type: string
      responses:
        "200":
          description: '{string} ok'
        "403":
          description: objectId is empty
  /movimiento/RegistrarMovimientoParameter:
    post:
      tags:
      - movimiento
      description: Registra los movimientos (como cdp, rp, ver variable tipoMovimiento)
        y los propaga tanto en la colección
      operationId: MovimientosController.RegistrarMovimientoParameter
      parameters:
      - in: body
        name: body
        description: json de movimientos enviado desde el api_mid_financiera
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/models.Object'
      responses:
        "200":
          description: '{string} success'
        "403":
          description: error
  /movimiento/RegistrarMovimientos:
    post:
      tags:
      - movimiento
      description: Registra los movimientos (como cdp, rp, ver variable tipoMovimiento)
        y los propaga tanto en la colección
      operationId: MovimientosController.RegistrarMovimiento
      parameters:
      - in: body
        name: body
        description: json de movimientos enviado desde el api_mid_financiera
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/models.Object'
      responses:
        "200":
          description: '{string} success'
        "403":
          description: error
  /necesidades/:
    get:
      tags:
      - necesidades
      description: get all objects
      operationId: NecesidadesController.GetAll
      responses:
        "200":
          description: Necesidades models.Necesidades
        "403":
          description: :objectId is empty
    post:
      tags:
      - necesidades
      description: Post
      operationId: NecesidadesController.Post
      parameters:
      - in: body
        name: body
        description: Body para la creacion de Necesidades
        required: true
        schema:
          $ref: '#/definitions/models.Necesidades'
      responses:
        "200":
          description: '{int} Necesidades.Id'
        "403":
          description: body is empty
  /necesidades/{objectId}:
    get:
      tags:
      - necesidades
      description: get Necesidad by nombre
      operationId: NecesidadesController.Get
      parameters:
      - in: path
        name: nombre
        description: El nombre de la Necesidad a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Necesidad'
        "403":
          description: :uid is empty
    put:
      tags:
      - necesidades
      description: update the Necesidad
      operationId: NecesidadesController.Update
      parameters:
      - in: path
        name: objectId
        description: The objectid you want to update
        required: true
        type: string
      - in: body
        name: body
        description: The body
        required: true
        schema:
          $ref: '#/definitions/models.Object'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "403":
          description: :objectId is empty
    delete:
      tags:
      - necesidades
      description: Borrar Necesidad
      operationId: NecesidadesController.Borrar Necesidad
      parameters:
      - in: path
        name: objectId
        description: El ObjectId del objeto que se quiere borrar
        required: true
        type: string
      responses:
        "200":
          description: '{string} ok'
        "403":
          description: objectId is empty
  /producto/:
    get:
      tags:
      - producto
      description: get all objects
      operationId: ProductoController.GetAll
      responses:
        "200":
          description: Producto models.Producto
        "403":
          description: :objectId is empty
    post:
      tags:
      - producto
      description: create Producto
      operationId: ProductoController.Create
      parameters:
      - in: body
        name: body
        description: body for Producto content
        required: true
        schema:
          $ref: '#/definitions/models.Producto'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.Producto'
        "403":
          description: body is empty
  /producto/{id}:
    get:
      tags:
      - producto
      description: get Producto by nombre
      operationId: ProductoController.Get
      parameters:
      - in: path
        name: nombre
        description: El nombre de la Producto a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Producto'
        "403":
          description: :uid is empty
  /producto/{objectId}:
    put:
      tags:
      - producto
      description: update the Producto
      operationId: ProductoController.Update
      parameters:
      - in: path
        name: objectId
        description: The objectid you want to update
        required: true
        type: string
      - in: body
        name: body
        description: The body
        required: true
        schema:
          $ref: '#/definitions/models.Object'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "403":
          description: :objectId is empty
    delete:
      tags:
      - producto
      description: Eliminar Producto
      operationId: ProductoController.Eliminar Producto
      parameters:
      - in: path
        name: objectId
        description: El ObjectId del objeto que se quiere borrar
        required: true
        type: string
      responses:
        "200":
          description: '{string} ok'
        "403":
          description: objectId is empty
  /solicitudesCDP/:
    get:
      tags:
      - solicitudesCDP
      description: get all objects
      operationId: SolicitudesCDPController.GetAll
      responses:
        "200":
          description: SolicitudCDP models.SolicitudCDP
        "403":
          description: :objectId is empty
    post:
      tags:
      - solicitudesCDP
      description: Post
      operationId: SolicitudesCDPController.Post
      parameters:
      - in: body
        name: body
        description: Body para la creacion de SolicitudesCDP
        required: true
        schema:
          $ref: '#/definitions/models.SolicitudCDP'
      responses:
        "200":
          description: '{int} SolicitudCDP.Id'
        "403":
          description: body is empty
  /solicitudesCDP/{objectId}:
    get:
      tags:
      - solicitudesCDP
      description: get SolicitudCDP by nombre
      operationId: SolicitudesCDPController.Get
      parameters:
      - in: path
        name: nombre
        description: El nombre de la SolicitudCDP a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SolicitudCDP'
        "403":
          description: :uid is empty
    put:
      tags:
      - solicitudesCDP
      description: update the SolicitudCDP
      operationId: SolicitudesCDPController.Update
      parameters:
      - in: path
        name: objectId
        description: The objectid you want to update
        required: true
        type: string
      - in: body
        name: body
        description: The body
        required: true
        schema:
          $ref: '#/definitions/models.Object'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "403":
          description: :objectId is empty
    delete:
      tags:
      - solicitudesCDP
      description: Borrar SolicitudCDP
      operationId: SolicitudesCDPController.Borrar SolicitudCDP
      parameters:
      - in: path
        name: objectId
        description: El ObjectId del objeto que se quiere borrar
        required: true
        type: string
      responses:
        "200":
          description: '{string} ok'
        "403":
          description: objectId is empty
  /solicitudesCRP/:
    get:
      tags:
      - solicitudesCRP
      description: get all objects
      operationId: SolicitudesCRPController.GetAll
      responses:
        "200":
          description: SolicitudCRP models.SolicitudCRP
        "403":
          description: :objectId is empty
    post:
      tags:
      - solicitudesCRP
      description: Post
      operationId: SolicitudesCRPController.Post
      parameters:
      - in: body
        name: body
        description: Body para la creacion de SolicitudesCRP
        required: true
        schema:
          $ref: '#/definitions/models.SolicitudCRP'
      responses:
        "200":
          description: '{int} SolicitudCRP.Id'
        "403":
          description: body is empty
  /solicitudesCRP/{objectId}:
    get:
      tags:
      - solicitudesCRP
      description: get SolicitudCRP by nombre
      operationId: SolicitudesCRPController.Get
      parameters:
      - in: path
        name: nombre
        description: El nombre de la SolicitudCRP a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SolicitudCRP'
        "403":
          description: :uid is empty
    put:
      tags:
      - solicitudesCRP
      description: update the SolicitudCRP
      operationId: SolicitudesCRPController.Update
      parameters:
      - in: path
        name: objectId
        description: The objectid you want to update
        required: true
        type: string
      - in: body
        name: body
        description: The body
        required: true
        schema:
          $ref: '#/definitions/models.Object'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "403":
          description: :objectId is empty
    delete:
      tags:
      - solicitudesCRP
      description: Borrar SolicitudCRP
      operationId: SolicitudesCRPController.Borrar SolicitudCRP
      parameters:
      - in: path
        name: objectId
        description: El ObjectId del objeto que se quiere borrar
        required: true
        type: string
      responses:
        "200":
          description: '{string} ok'
        "403":
          description: objectId is empty
definitions:
  20421.0xc000754510.false:
    title: "false"
    type: object
  20772.rubroFuente:
    title: rubroFuente
    type: object
  bson.ObjectId:
    title: ObjectId
    type: object
  models.Compromiso:
    title: Compromiso
    type: object
    properties:
      numeroCompromiso:
        type: integer
        format: int64
      tipoCompromiso:
        type: integer
        format: int64
  models.FuenteFinanciamiento:
    title: FuenteFinanciamiento
    type: object
    properties:
      Codigo:
        type: string
      Estado:
        type: string
      NumeroDocumento:
        type: string
      Rubros:
        $ref: '#/definitions/20772.rubroFuente'
      TipoDocumento:
        type: string
      TipoFuente:
        $ref: '#/definitions/20421.0xc000754510.false'
      UnidadEjecutora:
        type: string
      ValorActual:
        type: number
        format: double
      ValorInicial:
        type: number
        format: double
  models.FuenteFinancimiento:
    title: FuenteFinancimiento
    type: object
  models.General:
    title: General
    type: object
    properties:
      Activo:
        type: boolean
      Descripcion:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      Nombre:
        type: string
      Vigencia:
        type: integer
        format: int64
  models.Necesidad:
    title: Necesidad
    type: object
    properties:
      _id:
        $ref: '#/definitions/bson.ObjectId'
      apropiaciones:
        type: array
        items:
          $ref: '#/definitions/models.apropiacion'
      detalleServicio:
        $ref: '#/definitions/models.detalleServicio'
      idAdministrativa:
        type: integer
        format: int64
      tipoContrato:
        type: integer
        format: int64
      valor:
        type: number
        format: double
  models.Necesidades:
    title: Necesidades
    type: object
  models.NodoRubro:
    title: NodoRubro
    type: object
    properties:
      Bloqueado:
        type: boolean
      Codigo:
        type: string
      Hijos:
        type: array
        items:
          type: string
      Padre:
        type: string
      UnidadEjecutora:
        type: string
  models.NodoRubroApropiacion2018:
    title: NodoRubroApropiacion2018
    type: object
  models.Object:
    title: Object
    type: object
  models.Producto:
    title: Producto
    type: object
    properties:
      _id:
        $ref: '#/definitions/bson.ObjectId'
      Codigo:
        type: number
        format: double
  models.SolicitudCDP:
    title: SolicitudCDP
    type: object
    properties:
      _id:
        $ref: '#/definitions/bson.ObjectId'
      activo:
        type: boolean
      centroGestor:
        type: integer
        format: int64
      consecutivo:
        type: integer
        format: int64
      entidad:
        type: integer
        format: int64
      estado:
        type: integer
        format: int64
      fechaCreacion:
        type: string
        format: datetime
      fechaModificacion:
        type: string
        format: datetime
      fechaRegistro:
        type: string
        format: datetime
      infoCdp:
        $ref: '#/definitions/models.infoCdp'
      justificacionRechazo:
        type: string
      necesidad:
        type: integer
        format: int64
      vigencia:
        type: string
  models.SolicitudCRP:
    title: SolicitudCRP
    type: object
    properties:
      _id:
        $ref: '#/definitions/bson.ObjectId'
      activo:
        type: boolean
      beneficiario:
        type: string
      compromiso:
        $ref: '#/definitions/models.Compromiso'
      consecutivo:
        type: integer
        format: int64
      consecutivoCdp:
        type: integer
        format: int64
      fechaCreacion:
        type: string
        format: datetime
      fechaModificacion:
        type: string
        format: datetime
      infoCrp:
        $ref: '#/definitions/models.infoCrp'
      valor:
        type: number
        format: double
      vigencia:
        type: string
  models.actividad:
    title: actividad
    type: object
    properties:
      codigo:
        type: string
      valor:
        type: number
        format: double
  models.apropiacion:
    title: apropiacion
    type: object
    properties:
      codigo:
        type: string
      fuentes:
        type: array
        items:
          $ref: '#/definitions/models.fuente'
      metas:
        type: array
        items:
          $ref: '#/definitions/models.meta'
      productos:
        type: array
        items:
          $ref: '#/definitions/models.producto'
  models.detalleServicio:
    title: detalleServicio
    type: object
    properties:
      codigo:
        type: string
      descripcion:
        type: string
      valor:
        type: number
        format: double
  models.fuente:
    title: fuente
    type: object
    properties:
      codigo:
        type: string
      valor:
        type: number
        format: double
  models.infoCdp:
    title: infoCdp
    type: object
    properties:
      consecutivo:
        type: integer
        format: int64
      estado:
        type: integer
        format: int64
      fechaExpedicion:
        type: string
        format: datetime
  models.infoCrp:
    title: infoCrp
    type: object
    properties:
      consecutivo:
        type: integer
        format: int64
      estado:
        type: integer
        format: int64
      fechaExpedicion:
        type: string
        format: datetime
  models.meta:
    title: meta
    type: object
    properties:
      actividades:
        type: array
        items:
          $ref: '#/definitions/models.actividad'
      codigo:
        type: string
  models.producto:
    title: producto
    type: object
    properties:
      _id:
        $ref: '#/definitions/bson.ObjectId'
      valor:
        type: number
        format: double
  stringtrue:
    title: stringtrue
    type: object
tags:
- name: arbol_rubro
  description: |
    NodoRubroController estructura para un controlador de beego
- name: arbol_rubro_apropiacion
  description: |
    NodoRubroApropiacionController struct del controlador, utiliza los atributos y funciones de un controlador de beego
- name: fuente_financiamiento
  description: |
    FuenteFinanciamientoController operations for FuenteFinanciamiento
- name: movimiento
  description: |
    MovimientosController estructura para un controlador de beego
- name: producto
  description: |
    ProductoController operations for FuenteFinanciamiento
- name: necesidades
  description: |
    NecesidadesController estructura para un controlador de beego
- name: solicitudesCDP
  description: |
    SolicitudesCDPController estructura para un controlador de beego
- name: solicitudesCRP
  description: |
    SolicitudesCRPController estructura para un controlador de beego
