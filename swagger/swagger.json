{
    "swagger": "2.0",
    "info": {
        "title": "API",
        "description": "API Aplicacion Voto - Entidades Core",
        "version": "1.0.0",
        "termsOfService": "http://oas.udistrital.edu.co/",
        "contact": {
            "email": "ssierraf@correo.udistrital.edu.co"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/arbol_rubro/": {
            "get": {
                "tags": [
                    "arbol_rubro"
                ],
                "description": "get all objects",
                "operationId": "NodoRubroController.GetAll",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Consulta",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.NodoRubro"
                            }
                        }
                    },
                    "403": {
                        "description": ":objectId is empty"
                    }
                }
            },
            "post": {
                "tags": [
                    "arbol_rubro"
                ],
                "description": "Crear NodoRubro",
                "operationId": "NodoRubroController.Crear NodoRubro",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Body para la creacion de NodoRubro",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NodoRubro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/arbol_rubro/arbol/{raiz}": {
            "get": {
                "tags": [
                    "arbol_rubro"
                ],
                "description": "Construye el árbol a un nivel dependiendo de la raíz",
                "operationId": "NodoRubroController.FullArbolRubro",
                "parameters": [
                    {
                        "in": "path",
                        "name": "raiz",
                        "description": "Código de la raíz",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/map[string]interface{}"
                            }
                        }
                    },
                    "404": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/arbol_rubro/arbol_reducido/{raiz}": {
            "get": {
                "tags": [
                    "arbol_rubro"
                ],
                "description": "Construye el árbol con solo el nombre, codigo e hijos a un nivel dependiendo de la raíz y nivel",
                "operationId": "NodoRubroController.FullArbolRubroReducido",
                "parameters": [
                    {
                        "in": "path",
                        "name": "raiz",
                        "description": "Código de la raíz",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nivel",
                        "description": "Número de nivel (-1 = Todo el arbol, 0 = nivel 0 , 1 = Primer Nivel ... - Por Defecto: -1)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/map[string]interface{}"
                            }
                        }
                    },
                    "404": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/arbol_rubro/get_hojas": {
            "get": {
                "tags": [
                    "arbol_rubro"
                ],
                "description": "Devuelve un arreglo con todos los nodos hoja",
                "operationId": "NodoRubroController.GetHojas",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.NodoRubroApropiacion"
                            }
                        }
                    }
                }
            }
        },
        "/arbol_rubro/{id}": {
            "get": {
                "tags": [
                    "arbol_rubro"
                ],
                "description": "get NodoRubro by nombre",
                "operationId": "NodoRubroController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "El nombre de la NodoRubro a consultar",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.NodoRubro"
                        }
                    },
                    "403": {
                        "description": ":uid is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "arbol_rubro"
                ],
                "description": "update the NodoRubro",
                "operationId": "NodoRubroController.Update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NodoRubro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "delete": {
                "tags": [
                    "arbol_rubro"
                ],
                "description": "Borrar NodoRubro",
                "operationId": "NodoRubroController.Borrar NodoRubro",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "El id del objeto que se quiere borrar",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/arbol_rubro_apropiacion/": {
            "get": {
                "tags": [
                    "arbol_rubro_apropiacion"
                ],
                "description": "get all objects",
                "operationId": "NodoRubroApropiacionController.GetAll",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Consulta",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.NodoRubroApropiacion"
                            }
                        }
                    },
                    "403": {
                        "description": ":objectId is empty"
                    }
                }
            },
            "post": {
                "tags": [
                    "arbol_rubro_apropiacion"
                ],
                "description": "Post NodoRubroApropiacion",
                "operationId": "NodoRubroApropiacionController.Post NodoRubroApropiacion",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Body para la creacion de NodoRubroApropiacion",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NodoRubroApropiacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/arbol_rubro_apropiacion/ArbolApropiacionPadreHijo/{raiz}/{unidadEjecutora}/{vigencia}": {
            "get": {
                "tags": [
                    "arbol_rubro_apropiacion"
                ],
                "description": "Devuelve un nivel del árbol de apropiaciones",
                "operationId": "NodoRubroApropiacionController.Preflight ArbolApropiacionPadreHijo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "raiz",
                        "description": "Raiz",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/map[string]interface{}"
                            }
                        }
                    }
                }
            }
        },
        "/arbol_rubro_apropiacion/RaicesArbolApropiacion/{unidadEjecutora}/{vigencia}": {
            "get": {
                "tags": [
                    "arbol_rubro_apropiacion"
                ],
                "description": "RaicesArbolApropiacion",
                "operationId": "NodoRubroApropiacionController.RaicesArbolApropiacion",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/map[string]interface{}"
                            }
                        }
                    }
                }
            }
        },
        "/arbol_rubro_apropiacion/aprobacion_masiva/{unidadEjecutora}/{vigencia}": {
            "post": {
                "tags": [
                    "arbol_rubro_apropiacion"
                ],
                "description": "Cambia el estado de los documentos arbol_rubro_apropiacion de una vigencia y unidad ejecutora",
                "operationId": "NodoRubroApropiacionController.AprobacionMasiva",
                "parameters": [
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora de la apropiación",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia de la apropiación",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/arbol_rubro_apropiacion/arbol_apropiacion/{raiz}/{unidadEjecutora}/{vigencia}": {
            "get": {
                "tags": [
                    "arbol_rubro_apropiacion"
                ],
                "description": "Construye el árbol dependiendo de la raíz",
                "operationId": "NodoRubroApropiacionController.FullArbolRubroApropiaciones",
                "parameters": [
                    {
                        "in": "path",
                        "name": "raiz",
                        "description": "Código de la raíz",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/map[string]interface{}"
                            }
                        }
                    }
                }
            }
        },
        "/arbol_rubro_apropiacion/arbol_apropiacion_valores/{unidadEjecutora}/{vigencia}": {
            "get": {
                "tags": [
                    "arbol_rubro_apropiacion"
                ],
                "description": "Construye el árbol completo con valores",
                "operationId": "NodoRubroApropiacionController.FullArbolApropiaciones",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/map[string]interface{}"
                            }
                        }
                    }
                }
            }
        },
        "/arbol_rubro_apropiacion/arbol_apropiacion_valores/{unidadEjecutora}/{vigencia}/{id}": {
            "get": {
                "tags": [
                    "arbol_rubro_apropiacion"
                ],
                "description": "Construye el árbol completo con valores",
                "operationId": "NodoRubroApropiacionController.FullArbolApropiacionesbyID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Rubro",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nivel",
                        "description": "Número de nivel (-1 = Todo el arbol, 0 = nivel 0 , 1 = Primer Nivel ... )",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "estado",
                        "description": "Estado de la apropiacion (TODO: Confirmar)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/map[string]interface{}"
                            }
                        }
                    }
                }
            }
        },
        "/arbol_rubro_apropiacion/arbol_por_estado/{unidadEjecutora}/{vigencia}/{estado}/": {
            "get": {
                "tags": [
                    "arbol_rubro_apropiacion"
                ],
                "description": "Genera el árbol dependiendo del estado de las apropiaciones",
                "operationId": "NodoRubroApropiacionController.TreeByState",
                "parameters": [
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora de la apropiación",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia de la apropiación",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "path",
                        "name": "estado",
                        "description": "Estado",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Consulta",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/map[string]interface{}"
                            }
                        }
                    }
                }
            }
        },
        "/arbol_rubro_apropiacion/comprobar_balance/{unidadEjecutora}/{vigencia}": {
            "post": {
                "tags": [
                    "arbol_rubro_apropiacion"
                ],
                "description": "ComprobarBalanceArbolApropiaciones",
                "operationId": "NodoRubroApropiacionController.ComprobarBalanceArbolApropiaciones",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "movimientos",
                        "description": "Unidad Ejecutora",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Movimiento"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/map[string]interface{}"
                        }
                    },
                    "404": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/arbol_rubro_apropiacion/get_hojas/{unidadEjecutora}/{vigencia}": {
            "get": {
                "tags": [
                    "arbol_rubro_apropiacion"
                ],
                "description": "Devuelve un arreglo con todos los nodos hoja correspondientes a la vigencia y ue",
                "operationId": "NodoRubroApropiacionController.GetHojas",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.NodoRubroApropiacion"
                            }
                        }
                    }
                }
            }
        },
        "/arbol_rubro_apropiacion/{id}": {
            "delete": {
                "tags": [
                    "arbol_rubro_apropiacion"
                ],
                "description": "Borrar NodoRubroApropiacion2018",
                "operationId": "NodoRubroApropiacionController.Delete NodoRubroApropiacion2018",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "El id del objeto que se quiere borrar",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/arbol_rubro_apropiacion/{id}/{vigencia}/{unidadEjecutora}": {
            "get": {
                "tags": [
                    "arbol_rubro_apropiacion"
                ],
                "description": "get NodoRubroApropiacion2018 by nombre",
                "operationId": "NodoRubroApropiacionController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.NodoRubroApropiacion"
                        }
                    },
                    "403": {
                        "description": ":uid is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "arbol_rubro_apropiacion"
                ],
                "description": "update the NodoRubroApropiacion",
                "operationId": "NodoRubroApropiacionController.Update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NodoRubroApropiacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/arbol_rubro_apropiacion/{vigencia}/{unidadEjecutora}": {
            "get": {
                "tags": [
                    "arbol_rubro_apropiacion"
                ],
                "description": "get all objects",
                "operationId": "NodoRubroApropiacionController.GetAllVigencia",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Consulta",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.NodoRubroApropiacion"
                            }
                        }
                    },
                    "403": {
                        "description": ":unidadEjecutora is empty"
                    }
                }
            }
        },
        "/documento_presupuestal/documento/{vigencia}/{areaFuncional}/{id}": {
            "get": {
                "tags": [
                    "documento_presupuestal"
                ],
                "description": "get documento presupuestal by id",
                "operationId": "DocumentoPresupuestalController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "El id de la DocumentoPresupuestal a consultar",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "areaFuncional",
                        "description": "Area Funcional",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DocumentoPresupuestal"
                        }
                    },
                    "403": {
                        "description": ":objectId is empty"
                    }
                }
            }
        },
        "/documento_presupuestal/get_all_cdp/{vigencia}": {
            "get": {
                "tags": [
                    "documento_presupuestal"
                ],
                "description": "get all cdp objects",
                "operationId": "DocumentoPresupuestalController.GetAllCdp",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DocumentoPresupuestal"
                            }
                        }
                    },
                    "403": {
                        "description": ":vigencia is empty"
                    }
                }
            }
        },
        "/documento_presupuestal/get_doc_mov_by_parent/{vigencia}/{CG}/{id}": {
            "get": {
                "tags": [
                    "documento_presupuestal"
                ],
                "description": "Obtiene un documento presupuestal de tipo cdp con su id de solicitud",
                "operationId": "DocumentoPresupuestalController.GetDocMovByParent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The parentUUID you want to get",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "CG",
                        "description": "Centro Gestor (Unidad Ejecutora?)",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DocumentoPresupuestal"
                            }
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/documento_presupuestal/get_info_cdp/{id}": {
            "get": {
                "tags": [
                    "documento_presupuestal"
                ],
                "description": "Obtiene un documento presupuestal de tipo cdp con su id de solicitud",
                "operationId": "DocumentoPresupuestalController.GetInfoCdp",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "_id de Solicitud CDP",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DocumentoPresupuestal"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/documento_presupuestal/{vigencia}/{CG}/": {
            "get": {
                "tags": [
                    "documento_presupuestal"
                ],
                "description": "get all objects with data bases query",
                "operationId": "DocumentoPresupuestalController.GetAllQuery",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "CG",
                        "description": "Centro Gestor (Unidad Ejecutora?)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ..., if the filter value includes !$ at the begining, the value won't be converted to int",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DocumentoPresupuestal"
                            }
                        }
                    },
                    "403": {
                        "description": ":objectId is empty"
                    }
                }
            }
        },
        "/documento_presupuestal/{vigencia}/{CG}/{tipo}": {
            "get": {
                "tags": [
                    "documento_presupuestal"
                ],
                "description": "get all objects",
                "operationId": "DocumentoPresupuestalController.GetAll",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "CG",
                        "description": "Centro Gestor (Unidad Ejecutora?)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "tipo",
                        "description": "Tipo",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DocumentoPresupuestal"
                            }
                        }
                    },
                    "403": {
                        "description": ":objectId is empty"
                    }
                }
            }
        },
        "/documento_presupuestal/{vigencia}/{areaFuncional}/{id}": {
            "put": {
                "tags": [
                    "documento_presupuestal"
                ],
                "description": "update a documento presupuestal document",
                "operationId": "DocumentoPresupuestalController.Update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "areaFuncional",
                        "description": "Area Funcional",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DocumentoPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": ":areaFuncional is empty"
                    }
                }
            }
        },
        "/fuente_financiamiento/": {
            "post": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "create FuenteFinanciamiento",
                "operationId": "FuenteFinanciamientoController.Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciamiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamiento"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fuente_financiamiento/VincularFuente": {
            "post": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "create FuenteFinanciamiento",
                "operationId": "FuenteFinanciamientoController.Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FuenteFinanciamiento content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamiento"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamiento"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fuente_financiamiento/fuente_financiamiento_apropiacion/{rubro_apropiacion_id}/{vigencia}/{unidadEjecutora}": {
            "get": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "Borrar FuenteFinanciamiento",
                "operationId": "FuenteFinanciamientoController.GetWithRubro",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rubro_apropiacion_id",
                        "description": "El ObjectId del objeto que se quiere borrar",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.FuenteFinanciamiento"
                            }
                        }
                    },
                    "403": {
                        "description": "objectId is empty"
                    }
                }
            }
        },
        "/fuente_financiamiento/{id}/{vigencia}/{unidadEjecutora}": {
            "get": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "get FuenteFinancimiento by nombre",
                "operationId": "FuenteFinanciamientoController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "El nombre de la FuenteFinancimiento a consultar",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinancimiento"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "update the FuenteFinanciamiento",
                "operationId": "FuenteFinanciamientoController.Update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The objectid you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FuenteFinanciamiento"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "Borrar FuenteFinanciamiento",
                "operationId": "FuenteFinanciamientoController.Borrar FuenteFinanciamiento",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "El ObjectId del objeto que se quiere borrar",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "objectId is empty"
                    }
                }
            }
        },
        "/fuente_financiamiento/{vigencia}/{unidadEjecutora}": {
            "get": {
                "tags": [
                    "fuente_financiamiento"
                ],
                "description": "get all objects",
                "operationId": "FuenteFinanciamientoController.GetAll",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "unidadEjecutora",
                        "description": "Unidad Ejecutora",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ..., if the filter value includes !$ at the begining, the value won't be converted to int",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.FuenteFinanciamiento"
                            }
                        }
                    },
                    "403": {
                        "description": ":unidadEjecutora is empty"
                    }
                }
            }
        },
        "/movimiento/RegistrarMovimientoParameter": {
            "post": {
                "tags": [
                    "movimiento"
                ],
                "description": "Registra los movimientos (como cdp, rp, ver variable tipoMovimiento) y los propaga tanto en la colección",
                "operationId": "MovimientosController.RegistrarMovimientoParameter",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "json de movimientos enviado desde el api_mid_financiera",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MovimientoParameter"
                        }
                    },
                    "403": {
                        "description": "error"
                    }
                }
            }
        },
        "/movimiento/RegistrarMovimientos": {
            "post": {
                "tags": [
                    "movimiento"
                ],
                "description": "Registra los movimientos (como cdp, rp, ver variable tipoMovimiento) y los propaga tanto en la colección",
                "operationId": "MovimientosController.RegistrarMovimiento",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "json de movimientos enviado desde el api_mid_financiera",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DocumentoPresupuestal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/map[string]interface{}"
                        }
                    },
                    "403": {
                        "description": "error"
                    }
                }
            }
        },
        "/movimiento/get_movimentos_by_parent_id/{vigencia}/{areaFuncional}/{id}": {
            "get": {
                "tags": [
                    "movimiento"
                ],
                "description": "get one object",
                "operationId": "MovimientosController.GetOne",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "areaFuncional",
                        "description": "Area Funcional",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID padre",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Movimiento"
                        }
                    },
                    "403": {
                        "description": ":objectId is empty"
                    }
                }
            }
        },
        "/movimiento/{vigencia}/{CG}/{parentUUID}": {
            "get": {
                "tags": [
                    "movimiento"
                ],
                "description": "get all objects",
                "operationId": "MovimientosController.GetMovimientosByDocumentoPresupuestalUUID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "parentUUID",
                        "description": "El parentUUID del objeto que se quiere traer",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "vigencia",
                        "description": "Vigencia",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "CG",
                        "description": "Centro Gestor (Unidad Ejecutora?)",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/map[string]interface{}"
                            }
                        }
                    },
                    "403": {
                        "description": ":objectId is empty"
                    }
                }
            }
        },
        "/necesidades/": {
            "get": {
                "tags": [
                    "necesidades"
                ],
                "description": "get all objects",
                "operationId": "NecesidadesController.GetAll",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Consulta",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Necesidad"
                            }
                        }
                    },
                    "403": {
                        "description": ":objectId is empty"
                    }
                }
            },
            "post": {
                "tags": [
                    "necesidades"
                ],
                "description": "Post",
                "operationId": "NecesidadesController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Body para la creacion de Necesidades",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Necesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/necesidades/{id}": {
            "get": {
                "tags": [
                    "necesidades"
                ],
                "description": "get Necesidad by nombre",
                "operationId": "NecesidadesController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "El id de la Necesidad a consultar",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Necesidad"
                        }
                    },
                    "403": {
                        "description": ":uid is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "necesidades"
                ],
                "description": "update the Necesidad",
                "operationId": "NecesidadesController.Update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Necesidad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "delete": {
                "tags": [
                    "necesidades"
                ],
                "description": "Borrar Necesidad",
                "operationId": "NecesidadesController.Borrar Necesidad",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "El id del objeto que se quiere borrar",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/producto/": {
            "get": {
                "tags": [
                    "producto"
                ],
                "description": "get all objects",
                "operationId": "ProductoController.GetAll",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ..., if the filter value includes !$ at the begining, the value won't be converted to int",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Producto"
                            }
                        }
                    },
                    "403": {
                        "description": ":objectId is empty"
                    }
                }
            },
            "post": {
                "tags": [
                    "producto"
                ],
                "description": "create Producto",
                "operationId": "ProductoController.Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Producto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Producto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/producto/{id}": {
            "get": {
                "tags": [
                    "producto"
                ],
                "description": "get Producto by nombre",
                "operationId": "ProductoController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "El nombre del Producto a consultar",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Producto"
                        }
                    },
                    "403": {
                        "description": ":uid is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "producto"
                ],
                "description": "update the Producto",
                "operationId": "ProductoController.Update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The objectid you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Producto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": ":objectId is empty"
                    }
                }
            },
            "delete": {
                "tags": [
                    "producto"
                ],
                "description": "Eliminar Producto",
                "operationId": "ProductoController.Eliminar Producto",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "El ObjectId del objeto que se quiere borrar",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "objectId is empty"
                    }
                }
            }
        },
        "/solicitudesCDP/": {
            "get": {
                "tags": [
                    "solicitudesCDP"
                ],
                "description": "get all objects",
                "operationId": "SolicitudesCDPController.GetAll",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Consulta",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SolicitudCDP"
                            }
                        }
                    },
                    "403": {
                        "description": ":objectId is empty"
                    }
                }
            },
            "post": {
                "tags": [
                    "solicitudesCDP"
                ],
                "description": "Post",
                "operationId": "SolicitudesCDPController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Body para la creacion de SolicitudesCDP",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudCDP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/solicitudesCDP/{id}": {
            "get": {
                "tags": [
                    "solicitudesCDP"
                ],
                "description": "get SolicitudCDP by nombre",
                "operationId": "SolicitudesCDPController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "El id de la SolicitudCDP a consultar",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudCDP"
                        }
                    },
                    "403": {
                        "description": ":uid is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "solicitudesCDP"
                ],
                "description": "update the SolicitudCDP",
                "operationId": "SolicitudesCDPController.Update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudCDP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "delete": {
                "tags": [
                    "solicitudesCDP"
                ],
                "description": "Borrar SolicitudCDP",
                "operationId": "SolicitudesCDPController.Borrar SolicitudCDP",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "El id del objeto que se quiere borrar",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/solicitudesCRP/": {
            "get": {
                "tags": [
                    "solicitudesCRP"
                ],
                "description": "get all objects",
                "operationId": "SolicitudesCRPController.GetAll",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ..., if the filter value includes !$ at the begining, the value won't be converted to int",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SolicitudCRP"
                            }
                        }
                    },
                    "403": {
                        "description": ":objectId is empty"
                    }
                }
            },
            "post": {
                "tags": [
                    "solicitudesCRP"
                ],
                "description": "Post",
                "operationId": "SolicitudesCRPController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Body para la creacion de SolicitudesCRP",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudCRP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/solicitudesCRP/{id}": {
            "get": {
                "tags": [
                    "solicitudesCRP"
                ],
                "description": "get SolicitudCRP by nombre",
                "operationId": "SolicitudesCRPController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "El nombre de la SolicitudCRP a consultar",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudCRP"
                        }
                    },
                    "403": {
                        "description": ":uid is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "solicitudesCRP"
                ],
                "description": "update the SolicitudCRP",
                "operationId": "SolicitudesCRPController.Update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SolicitudCRP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "delete": {
                "tags": [
                    "solicitudesCRP"
                ],
                "description": "Borrar SolicitudCRP",
                "operationId": "SolicitudesCRPController.Borrar SolicitudCRP",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "El id del objeto que se quiere borrar",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/vigencia/agregar_vigencia": {
            "post": {
                "tags": [
                    "vigencia"
                ],
                "description": "create vigencia",
                "operationId": "VigenciaController.AgregarVigencia",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Producto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VigenciaNueva"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.VigenciaNueva"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/vigencia/cerrar_vigencia_actual/{area_funcional}": {
            "get": {
                "tags": [
                    "vigencia"
                ],
                "description": "Se cierra la vigencia que se encuentre con estado actual en la colección, dependiendo del área funcional que le llegue.",
                "operationId": "VigenciaController.CerrarVigencia",
                "parameters": [
                    {
                        "in": "path",
                        "name": "area_funcional",
                        "description": "Área funcional a la que pertenece la vigencia que se quiere cerrar.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/map[string]interface{}"
                        }
                    },
                    "403": {
                        "description": "error"
                    }
                }
            }
        },
        "/vigencia/vigencia_actual": {
            "get": {
                "tags": [
                    "vigencia"
                ],
                "description": "Retorna la vigencia actual según la hora del servidor y añade o quita segùn el offset lo indica , por defecto 0.",
                "operationId": "VigenciaController.GetVigenciasCurrentVigenciaWithOffset",
                "parameters": [
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "offset para determinar vigencia ej: offset= 1; vigencia+1 , offset=-1; vigencia -1",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "error"
                    }
                }
            }
        },
        "/vigencia/vigencia_actual_area/{area_funcional}": {
            "get": {
                "tags": [
                    "vigencia"
                ],
                "description": "Retorna la vigencia del área funcional cuyo estado sea actual.",
                "operationId": "VigenciaController.GetVigenciaActual",
                "parameters": [
                    {
                        "in": "path",
                        "name": "area_funcional",
                        "description": "Área funcional a la que pertenece la vigencia que se quiere consultar",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/interface{}"
                            }
                        }
                    },
                    "403": {
                        "description": "error"
                    }
                }
            }
        },
        "/vigencia/vigencias_total": {
            "get": {
                "tags": [
                    "vigencia"
                ],
                "description": "Retorna las vigencias guardadas en las diferentes colecciones de la base de datos.",
                "operationId": "VigenciaController.GetTodasVigencias",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/interface{}"
                            }
                        }
                    },
                    "403": {
                        "description": "error"
                    }
                }
            }
        },
        "/vigencia/{namespace}/{centrogestor}": {
            "get": {
                "tags": [
                    "vigencia"
                ],
                "description": "Retorna las vigencias a las cuales se ha registrado un name_space en el sistema.",
                "operationId": "VigenciaController.GetVigenciasByNameSpace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "namespace",
                        "description": "name space al que pertenece el grupo de vigencias consultado",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "centrogestor",
                        "description": "centro gestor al que pertenece el grupo de vigencias consultado",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/map[string]int"
                            }
                        }
                    },
                    "403": {
                        "description": "error"
                    }
                }
            }
        }
    },
    "definitions": {
        "1422.string.0xc0006733b0": {
            "title": "0xc0006733b0",
            "type": "object"
        },
        "15179.0xc0006f9410.false": {
            "title": "false",
            "type": "object"
        },
        "21177.0xc00070cde0.false": {
            "title": "false",
            "type": "object"
        },
        "24877.0xc00070dce0.false": {
            "title": "false",
            "type": "object"
        },
        "25228.rubroFuente": {
            "title": "rubroFuente",
            "type": "object"
        },
        "25578.0xc00070dd40.false": {
            "title": "false",
            "type": "object"
        },
        "33209.\u003cnil\u003e.string": {
            "title": "string",
            "type": "object"
        },
        "bson.ObjectId": {
            "title": "ObjectId",
            "type": "object"
        },
        "interface{}": {
            "title": "interface{}",
            "type": "object"
        },
        "map[string]int": {
            "title": "map[string]int",
            "type": "object"
        },
        "map[string]interface{}": {
            "title": "map[string]interface{}",
            "type": "object"
        },
        "models.Compromiso": {
            "title": "Compromiso",
            "type": "object",
            "properties": {
                "numeroCompromiso": {
                    "type": "integer",
                    "format": "int64"
                },
                "tipoCompromiso": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.DocumentoPresupuestal": {
            "title": "DocumentoPresupuestal",
            "type": "object",
            "properties": {
                "Afectacion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Movimiento"
                    }
                },
                "AfectacionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CentroGestor": {
                    "type": "string"
                },
                "Consecutivo": {
                    "type": "integer",
                    "format": "int64"
                },
                "Data": {
                    "$ref": "#/definitions/21177.0xc00070cde0.false"
                },
                "Estado": {
                    "type": "string"
                },
                "FechaRegistro": {
                    "type": "string"
                },
                "Tipo": {
                    "type": "string"
                },
                "ValorActual": {
                    "type": "number",
                    "format": "double"
                },
                "ValorInicial": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "_id": {
                    "type": "string"
                }
            }
        },
        "models.FuenteFinanciamiento": {
            "title": "FuenteFinanciamiento",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Codigo": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaModificacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "Movimientos": {
                    "$ref": "#/definitions/25578.0xc00070dd40.false"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroDocumento": {
                    "type": "string"
                },
                "Rubros": {
                    "$ref": "#/definitions/25228.rubroFuente"
                },
                "TipoDocumento": {
                    "type": "string"
                },
                "TipoFuente": {
                    "$ref": "#/definitions/24877.0xc00070dce0.false"
                },
                "UnidadEjecutora": {
                    "type": "string"
                },
                "ValorActual": {
                    "type": "number",
                    "format": "double"
                },
                "ValorInicial": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FuenteFinancimiento": {
            "title": "FuenteFinancimiento",
            "type": "object"
        },
        "models.General": {
            "title": "General",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaModificacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "Nombre": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Movimiento": {
            "title": "Movimiento",
            "type": "object",
            "properties": {
                "DocumentoPresupuestalUUID": {
                    "type": "string"
                },
                "DocumentosPresGenerados": {
                    "$ref": "#/definitions/33209.\u003cnil\u003e.string"
                },
                "Estado": {
                    "type": "string"
                },
                "FechaRegistro": {
                    "type": "string"
                },
                "IDPsql": {
                    "type": "integer",
                    "format": "int64"
                },
                "Movimientos": {
                    "additionalProperties": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "Padre": {
                    "type": "string"
                },
                "Tipo": {
                    "type": "string"
                },
                "ValorActual": {
                    "type": "number",
                    "format": "double"
                },
                "ValorInicial": {
                    "type": "number",
                    "format": "double"
                },
                "_id": {
                    "type": "string"
                }
            }
        },
        "models.MovimientoParameter": {
            "title": "MovimientoParameter",
            "type": "object",
            "properties": {
                "FatherCollectionName": {
                    "type": "string"
                },
                "FatherUUIKeyName": {
                    "type": "string"
                },
                "Initial": {
                    "type": "boolean"
                },
                "Multiplicador": {
                    "type": "integer",
                    "format": "int64"
                },
                "NoBalanceLeftStateName": {
                    "type": "string"
                },
                "TipoDocumentoGenerado": {
                    "type": "string"
                },
                "TipoMovimientoHijo": {
                    "type": "string"
                },
                "TipoMovimientoPadre": {
                    "type": "string"
                },
                "WithOutChangeState": {
                    "type": "boolean"
                },
                "_id": {
                    "type": "string"
                }
            }
        },
        "models.Necesidad": {
            "title": "Necesidad",
            "type": "object",
            "properties": {
                "_id": {
                    "$ref": "#/definitions/bson.ObjectId"
                },
                "apropiaciones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.apropiacion"
                    }
                },
                "detalleServicio": {
                    "$ref": "#/definitions/models.detalleServicio"
                },
                "idAdministrativa": {
                    "type": "integer",
                    "format": "int64"
                },
                "tipoContrato": {
                    "type": "integer",
                    "format": "int64"
                },
                "valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.NodoRubro": {
            "title": "NodoRubro",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Apropiaciones": {
                    "type": "boolean"
                },
                "Bloqueado": {
                    "type": "boolean"
                },
                "Codigo": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaModificacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "Hijos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Nombre": {
                    "type": "string"
                },
                "Padre": {
                    "type": "string"
                },
                "UnidadEjecutora": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.NodoRubroApropiacion": {
            "title": "NodoRubroApropiacion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Apropiaciones": {
                    "type": "boolean"
                },
                "Bloqueado": {
                    "type": "boolean"
                },
                "Codigo": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Estado": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaModificacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "Hijos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Movimientos": {
                    "additionalProperties": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "Nombre": {
                    "type": "string"
                },
                "Padre": {
                    "type": "string"
                },
                "Productos": {
                    "$ref": "#/definitions/1422.string.0xc0006733b0"
                },
                "UnidadEjecutora": {
                    "type": "string"
                },
                "ValorActual": {
                    "type": "number",
                    "format": "double"
                },
                "ValorInicial": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Producto": {
            "title": "Producto",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Codigo": {
                    "type": "integer",
                    "format": "int64"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaModificacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "Nombre": {
                    "type": "string"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "_id": {
                    "$ref": "#/definitions/bson.ObjectId"
                }
            }
        },
        "models.SolicitudCDP": {
            "title": "SolicitudCDP",
            "type": "object",
            "properties": {
                "_id": {
                    "$ref": "#/definitions/bson.ObjectId"
                },
                "activo": {
                    "type": "boolean"
                },
                "centroGestor": {
                    "type": "integer",
                    "format": "int64"
                },
                "consecutivo": {
                    "type": "integer",
                    "format": "int64"
                },
                "entidad": {
                    "type": "integer",
                    "format": "int64"
                },
                "estado": {
                    "$ref": "#/definitions/15179.0xc0006f9410.false"
                },
                "fechaCreacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "fechaModificacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "fechaRegistro": {
                    "type": "string",
                    "format": "datetime"
                },
                "justificacionRechazo": {
                    "type": "string"
                },
                "necesidad": {
                    "type": "integer",
                    "format": "int64"
                },
                "vigencia": {
                    "type": "string"
                }
            }
        },
        "models.SolicitudCRP": {
            "title": "SolicitudCRP",
            "type": "object",
            "properties": {
                "_id": {
                    "$ref": "#/definitions/bson.ObjectId"
                },
                "activo": {
                    "type": "boolean"
                },
                "beneficiario": {
                    "type": "string"
                },
                "compromiso": {
                    "$ref": "#/definitions/models.Compromiso"
                },
                "consecutivo": {
                    "type": "integer",
                    "format": "int64"
                },
                "consecutivoCdp": {
                    "type": "integer",
                    "format": "int64"
                },
                "fechaCreacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "fechaFinalVigencia": {
                    "type": "string",
                    "format": "datetime"
                },
                "fechaInicioVigencia": {
                    "type": "string",
                    "format": "datetime"
                },
                "fechaModificacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "infoCrp": {
                    "$ref": "#/definitions/models.infoCrp"
                },
                "valor": {
                    "type": "number",
                    "format": "double"
                },
                "vigencia": {
                    "type": "string"
                }
            }
        },
        "models.VigenciaNueva": {
            "title": "VigenciaNueva",
            "type": "object",
            "properties": {
                "AreaFuncional": {
                    "type": "string"
                },
                "Valor": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.actividad": {
            "title": "actividad",
            "type": "object",
            "properties": {
                "codigo": {
                    "type": "string"
                },
                "valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.apropiacion": {
            "title": "apropiacion",
            "type": "object",
            "properties": {
                "codigo": {
                    "type": "string"
                },
                "fuentes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.fuente"
                    }
                },
                "metas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.meta"
                    }
                },
                "productos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.producto"
                    }
                }
            }
        },
        "models.detalleServicio": {
            "title": "detalleServicio",
            "type": "object",
            "properties": {
                "codigo": {
                    "type": "string"
                },
                "descripcion": {
                    "type": "string"
                },
                "valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.fuente": {
            "title": "fuente",
            "type": "object",
            "properties": {
                "codigo": {
                    "type": "string"
                },
                "valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.infoCrp": {
            "title": "infoCrp",
            "type": "object",
            "properties": {
                "consecutivo": {
                    "type": "integer",
                    "format": "int64"
                },
                "estado": {
                    "type": "integer",
                    "format": "int64"
                },
                "fechaExpedicion": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.meta": {
            "title": "meta",
            "type": "object",
            "properties": {
                "actividades": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.actividad"
                    }
                },
                "codigo": {
                    "type": "string"
                }
            }
        },
        "models.producto": {
            "title": "producto",
            "type": "object",
            "properties": {
                "_id": {
                    "$ref": "#/definitions/bson.ObjectId"
                },
                "valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        }
    },
    "tags": [
        {
            "name": "arbol_rubro",
            "description": "NodoRubroController estructura para un controlador de beego\n"
        },
        {
            "name": "arbol_rubro_apropiacion",
            "description": "NodoRubroApropiacionController struct del controlador, utiliza los atributos y funciones de un controlador de beego\n"
        },
        {
            "name": "fuente_financiamiento",
            "description": "FuenteFinanciamientoController operations for FuenteFinanciamiento\n"
        },
        {
            "name": "movimiento",
            "description": "MovimientosController estructura para un controlador de beego\n"
        },
        {
            "name": "producto",
            "description": "ProductoController operations for FuenteFinanciamiento\n"
        },
        {
            "name": "necesidades",
            "description": "NecesidadesController estructura para un controlador de beego\n"
        },
        {
            "name": "solicitudesCDP",
            "description": "SolicitudesCDPController estructura para un controlador de beego\n"
        },
        {
            "name": "solicitudesCRP",
            "description": "SolicitudesCRPController estructura para un controlador de beego\n"
        },
        {
            "name": "vigencia",
            "description": "VigenciaController estructura para un controlador de beego\n"
        }
    ]
}