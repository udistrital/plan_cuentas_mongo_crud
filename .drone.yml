workspace:
  base: /go
  path: src/github.com/udistrital/${DRONE_REPO##udistrital/}
  when:
      branch:
      - master
      - test
kind: pipeline
name: API_deploy

steps: 
  - name: go
    image: golang:1.9
    commands:
     - go get -t
     - GOOS=linux GOARCH=amd64 go build -o main
    when:
      branch:
      - master
      - test
      event:
      - push

  - name: go_run_test
    image: golang:1.9
    commands:
     - go get -t
     - go get github.com/smartystreets/goconvey/convey
     - go get -u gopkg.in/alecthomas/gometalinter.v1
     - gometalinter.v1 --install
     - go get github.com/axw/gocov/...
     - go get github.com/AlekSi/gocov-xml
     - go get -u github.com/jstemmer/go-junit-report
     - gometalinter.v1 ./... --checkstyle | tee report.xml
    # - gocov test ./... | gocov-xml > coverage.xml
    # - go test -v ./... | go-junit-report > test.xml
    when:
      branch:
      - dev
      - test
      - master
      event:
      - push

  - name: run_sonar_scanner
    image: openjdk:8-alpine
    commands:
     - export RELEASE=4.2.0.1873
     - apk add --no-cache  curl grep sed unzip nodejs npm
     - curl --insecure -o ./sonarscanner.zip -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$RELEASE-linux.zip
     - unzip sonarscanner.zip
     - rm sonarscanner.zip
     - rm -rf sonar-scanner-$RELEASE-linux/jre
     - sed -i 's/use_embedded_jre=true/use_embedded_jre=false/g' ./sonar-scanner-$RELEASE-linux/bin/sonar-scanner
     - export PATH=$PATH:/go/src/github.com/udistrital/${DRONE_REPO##udistrital/}/sonar-scanner-$RELEASE-linux/bin
     - cp sonar-project.properties ./sonar-scanner-$RELEASE-linux/conf/sonar-scanner.properties
     - sonar-scanner
    when:
      branch:
      - dev
      - test
      - master
      event:
      - push

  - name: publish_dockerhub  
    image: plugins/docker
    settings:
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
      repo: oas0/${DRONE_REPO##udistrital/}
      tags:
        - ${DRONE_COMMIT:0:7}
        - latest
    when:
      branch:
        - test
        - master    
  
  - name: go-awsecs
    image: golang:1.9
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: AWS_SECRET_ACCESS_KEY      
    commands:
     - case ${DRONE_BRANCH} in
          test) 
            AMBIENTE=test 
            CLUSTER=test
            ;;
          master) 
            AMBIENTE=prod
            CLUSTER=oas
            ;;
       esac
     - AWS_REGION=us-east-1
     - SERVICE=${DRONE_REPO##udistrital/}_$AMBIENTE
     - MYCONTAINER=oas0/${DRONE_REPO##udistrital/}:${DRONE_COMMIT:0:7}
     - container_name=${DRONE_REPO##udistrital/}
     - apt-get update
     - apt-get install unzip
     - wget https://github.com/Autodesk/go-awsecs/releases/download/v1.1/update-aws-ecs-service-linux-amd64.zip
     - unzip update-aws-ecs-service-linux-amd64.zip -d /go/bin
     - AWS_ACCESS_KEY_ID=$${AWS_ACCESS_KEY_ID} AWS_SECRET_ACCESS_KEY=$${AWS_SECRET_ACCESS_KEY} AWS_REGION=$AWS_REGION
       $GOPATH/bin/update-aws-ecs-service -cluster $CLUSTER -service $SERVICE -container-image $container_name=$MYCONTAINER    
    when:
      branch:
      - test
      - master
      event:
      - push  
  
  - name: NotifyTelegram
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: telegram_token
      to:
        from_secret: telegram_to
      format: html
      message: >
        {{#success build.status}}
          <code>{{repo.owner}}/{{repo.name}}</code> <a href="{{build.link}}">SUCCESS</a> 
          <code>{{commit.branch}}</code>@<a href="{{commit.link}}">{{truncate commit.sha 7}}</a><code> By:{{commit.author}}</code>
        {{else}}
          <code>{{repo.owner}}/{{repo.name}}</code> <a href="{{build.link}}">FAILURE</a>
          <code>{{commit.branch}}</code>@<a href="{{commit.link}}">{{truncate commit.sha 7}}</a><code> By:{{commit.author}}</code>
        {{/success}}
    when:
      branch:
      - master
      - test
      status:
      - failure
      - success
